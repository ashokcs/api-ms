openapi: 3.0.1
info:
  title: Tenpo TopUp API
  version: 1.0.0
servers:
  - url: https://api.dev.tenpo.cl
    description: Development Environment
tags:
  - name: Products
    description: Operaciones sobre productos de recarga y operadores
  - name: Helpers
    description: Operaciones de apoyo a la recarga
  - name: Transaction
    description: Operaciones de transacciones de recarga
  - name: User
    description: Operaciones para usuarios autenticadosa

paths:
  /products:
    get:
      tags: 
        - Products
      summary: Lista los tipos de producto disponibles para recarga
      security:
        - bearerAuth: []
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  
  /products/{productCode}:
    get:
      tags: 
        - Products
      summary: Lista los operadores disponibles para el tipo de producto
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: productCode
          required: true
          description: Código del tipo de producto
          schema:
            type: string
            example: "movil"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductOperators'
        400:
          description: "invalid parameter"
        404:
          description: "product not found"

  /products/{productCode}/{operatorCode}:
    get:
      tags: 
        - Products
      summary: Obtiene los detalles del operador del producto y sus reglas.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: productCode
          required: true
          description: Código del tipo de producto
          schema:
            type: string
            example: "movil"
        - in: path
          name: operatorCode
          required: true
          description: Código del operador
          schema:
            type: string
            example: "movil"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorConstraint'
        400:
          description: "invalid parameter"
        404:
          description: "product not found"

  /helpers/check:
    post:
      tags:
        - Helpers
      summary: Obtiene la factibilidad de una solicitud de recarga
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopUp'
      responses:
        200:
          description: "successful operation"
        400:
          description: "invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transaction:
    post:
      tags: 
        - Transaction
      summary: Crea una transacción de recarga
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TransactionRequest'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        400:
          description: invalid parameters
        500:
          description: internal server error

  /transaction/{id}:
    get:
      tags: 
        - Transaction
      summary: Obtiene los detalles de una transacción de pago de cuenta
      security:
        - bearerAuth: []
      parameters: 
        - in: path
          name: id
          required: true
          description: Id de la transacción de pago de cuenta
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        404:
          description: resource not found
        500:
          description: internal server error

  /transaction/cart:
    get:
      tags:
        - Transaction
      summary: Obtiene (e inicializa de ser necesario) una transacción en modo carro de compras (UNCONFIRMED)
      security:
        - bearerAuth: []
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartTransaction'
    put:
      tags:
        - Transaction
      summary: Agrega items al carro
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TransactionRequest'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartTopUp'
        400:
          description: invalid parameters
        500:
          description: internal server error
    post:
      tags:
        - Transaction
      summary: Confirma transacción de carro de compras para su procesamiento
      security:
        - bearerAuth: []
      responses:
        201:
          description: successful operation

  /transaction/cart/{topupId}:
    get:
      tags:
        - Transaction
      summary: Obtiene un item de recarga desde la transacción en modo carro de compras
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: topupId
          required: true
          description: Id del item de recarga
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartTopUp'
    delete:
      tags:
        - Transaction
      summary: Elimina un item de recarga
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: topupId
          required: true
          description: Id del item de recarga
          schema:
            type: string
      responses:
        200:
          description: successful operation

  /user:
    get:
      tags:
        - User
      summary: Obtiene un usuario de recargas (Solo para fines de experiencia de usuario)
      security:
        - bearerAuth: []
      responses:
        200:
          description: "user found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundUser'
        404:
          description: "user not found"
    put:
      tags:
        - User
      summary: Registra un usuario de recargas (solo para fines de experiencia de usuario)
      security:
        - bearerAuth: []
      responses:
        201:
          description: "user created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundUser'
        
  /user/favourite:
    put:
      tags:
        - User
      summary: Agrega un nuevo favorito
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Favourite'
      
      responses:
        201:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favourite'
        400:
          description: "invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - User
      summary: Lista los favoritos de un usuario
      security:
        - bearerAuth: []
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Favourite'
    delete:
      tags:
        - User
      summary: Elimina una lista de favoritos
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
      responses:
        200:
          description: Eliminación exitosa

  /user/favourites:
    put:
      tags:
        - User
      summary: Agrega múltiples favoritos
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              $ref: '#/components/schemas/Favourite'
      responses:
        201:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                $ref: '#/components/schemas/Favourite'
        400:
          description: "invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                IncompatibleOperator:
                  value:
                    code: "TEN-TOPUP-ERR03"
                    message: "El operador no soporta el tipo de producto especificado"
                InvalidIdentifier:
                  value:
                    code: "TEN-TOPUP-ERR04"
                    message: "Suscriptor no válido"

  /user/favourite/{id}:
    get:
      tags: 
        - User
      summary: Obtiene un favorito vinculado al usuario autenticado
      security:
        - bearerAuth: []
      parameters: 
        - in: path
          name: id
          required: true
          description: Id del favorito
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favourite'
        404:
          description: not found
    delete:
      tags: 
        - User
      summary: Elimina un favorito vinculado al usuario autenticado
      security:
        - bearerAuth: []
      parameters: 
        - in: path
          name: id
          required: true
          description: Id del favorito
          schema:
            type: string
      responses:
        200:
          description: successful operation
        404:
          description: not found
          
components:
  securitySchemes:
    bearerAuth:
      type: https
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Product:
      type: object
      properties:
        code:
          type: string
          description: ID del producto
          example: "tv"
        name:
          type: string
          description: Nombre del producto
          example: "Televisión"
    
    Operator:
      type: object
      properties:
        code: 
          type: string
          description: ID del operador
          example: "wom"
        name:
          type: string
          description: Nombre del operador
          example: "WOM"

    ProductOperators:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
        operators:
          type: array
          items:
            $ref: '#/components/schemas/OperatorConstraint'

    OperatorConstraint:
      type: object
      properties:
        operator: 
          $ref: '#/components/schemas/Operator'
        constraint:
          $ref: '#/components/schemas/Constraint'

    Constraint:
      type: object
      properties:
        identifier_type:
          type: string
          enum:
            ["SubscriptorRut", "SubscriptionIdentifier"]
          description: Tipo de identificador del producto
          example:
            "SubscriptorRut"
        amount_rule:
          oneOf:
            - $ref: '#/components/schemas/MinMaxRangeAmountRule'
            - $ref: '#/components/schemas/FixedListAmountRule'

    MinMaxRangeAmountRule:
      type: object
      properties:
        type:
          type: string
          enum: ["MinMaxRangeAmountRule"]
          description: Tipo de regla de monto por rangos
          example: "MinMaxRangeAmountRule"
        min:
          type: int64
          description: Monto mínimo del rango
          example: 1500
        max:
          type: int64
          description: Monto máximo del rango
          example: 20000

    FixedListAmountRule:
      type: object
      properties:
        type: 
          type: string
          enum: ["FixedListAmountRule"]
          description: Tipo de regla de monto por valores fijos
          example: "FixedListAmountRule"
        amounts:
          type: array
          items:
            type: int64
          description: Valores de recarga permitidos
          example: [1000, 2000, 3000, 4000, 5000]
    
    PaymentMethod:
      type: object
      properties:
        id:
          type: string
          description: ID del método de pago
          example: webpay
        name:
          type: string
          description: Nombre del método de pago
          example: Webpay
        private_only:
          type: boolean
          description: Si es verdadero, el medio de pago solo puede usarse por usuarios autenticados
          example: true
    
    TopUp:
      type: object
      properties:
        id:
          type: string
          description: ID de la recarga
          example: "1845e261-7cbc-4a9e-8cc7-31f21573c468"
        identifier:
          type: string
          description: Identificador del producto a recargar
          example: "912345678"
        amount:
          type: int64
          description: Monto a recargar
          example: 1500
        status:
          type: string
          description: "Estado de la recarga"
          enum: 
            ["PENDING", "PROCESSING", "SUCCEEDED", "FORWARDED", "FAILED"]
          example: "PENDING"
        productCode:
          type: string
          description: Código del producto
          example: "movil"
        operatorCode:
          type: string
          description: Código del operador
          example: "wom"
        created_at:
          type: string
          description: Fecha de creación de la transacción
          # example: "2019-04-24T10:58:26.140605-04:00"
        updated_at:
          type: string
          description: Fecha de actualización de la transacción
          # example: "2019-04-24T10:58:26.140605-04:00"

    CartTopUp:
      type: object
      properties:
        topup:
          $ref: '#/components/schemas/TopUp'
        validation:
          type: string
          enum:
            ["PENDING", "SUCCEEDED", "REJECTED"] 

    InboundUser:
      type: object
      properties:
        id:
          type: string
          description: ID de registro de usuario entrante
          example: "1845e261-7cbc-4a9e-8cc7-31f21573c468"
        user_id:
          type: string
          description: ID de usuario.
          example: "1845e261-7cbc-4a9e-8cc7-31f21573c468"
        created_at:
          type: string
          description: Fecha de creación
          # example: "2019-04-24T10:58:26.140605-04:00"

    Favourite:
      type: object
      properties:
        id:
          type: string
          description: ID del favorito
          example: "1845e261-7cbc-4a9e-8cc7-31f21573c468"
        user_id:
          type: string
          description: ID del usuario
          example: "1845e261-7cbc-4a9e-8cc7-31f21573ded4"
        description:
          type: string
          description: Descripción del favorito
          example: "Mi celular"
        identifier:
          type: string
          description: Identificador del producto
          example: "912345678"
        productCode:
          type: string
          description: Código del producto
          example: "movil"
        operatorCode:
          type: string
          description: Código del operador
          example: "wom"
        created_at:
          type: string
          description: Fecha de creación
          # example: "2019-04-24T10:58:26.140605-04:00"
        updated_at:
          type: string
          description: Fecha de actualización
          # example: "2019-04-24T10:58:26.140605-04:00"

    TransactionRequest:
      type: object
      properties:
        topups:
          type: array
          items:
            $ref: '#/components/schemas/TopUp'

    TransactionCheckoutRequest:
      type: object
      properties:
        payment_method_code:
          type: string
          description: ID del método de pago
          example: "webpay"
    
    Transaction:
      type: object
      properties:
        id:
          type: string
          description: ID de la transacción
          example: "51d95fc6-58e9-4bb0-a622-031cf08edc9c"
        user_id:
          type: string
          description: ID del usuario
          example: "51d95fc7-58e8-4cb0-d622-031cf08ed34f"
        order:
          type: string
          description: Número de orden de la transacción
          example: "T20190620144252014"
        status:
          type: string
          enum: ["PENDING", "PROCESSING", "SUCCEEDED", "UNFINISHED", "FAILED"]
          description: Estado de la transacción
          example: "PENDING"
        created_at:
          type: string
          description: Fecha de creación de la transacción
          # example: "2019-04-24T10:58:26.140605-04:00"
        updated_at:
          type: string
          description: Fecha de actualización de la transacción
          # example: "2019-04-24T10:58:26.140605-04:00"
        topups:
          type: array
          description: Lista de productos a recargar
          items:
            $ref: '#/components/schemas/TopUp'

    CartTransaction:
      type: object
      properties:
        id:
          type: string
          description: ID de la transacción
          example: "51d95fc6-58e9-4bb0-a622-031cf08edc9c"
        user_id:
          type: string
          description: ID del usuario
          example: "51d95fc7-58e8-4cb0-d622-031cf08ed34f"
        order:
          type: string
          description: Número de orden de la transacción
          example: "T20190620144252014"
        status:
          type: string
          enum: ["UNCONFIRMED", "PENDING", "PROCESSING", "SUCCEEDED", "UNFINISHED", "FAILED"]
          description: Estado de la transacción
          example: "PENDING"
        created_at:
          type: string
          description: Fecha de creación
          # example: "2019-04-24T10:58:26.140605-04:00"
        updated_at:
          type: string
          description: Fecha de actualización
          # example: "2019-04-24T10:58:26.140605-04:00"
        topups:
          type: array
          description: Lista de productos a recargar
          items:
            $ref: '#/components/schemas/CartTopUp'

    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: Código del error
          example: "TEN-TOPUP-ERR04"
        message: 
          type: string
          description: Detalle del error
          example: "Suscriptor no válido"