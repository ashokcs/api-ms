swagger: "2.0"
info:
  description: Api Documentation
  version: 1.0.0
  title: Payment Loyalty API
host: localhost:8080
basePath: /v1/payment-loyalty
schemes:
  - http
paths:
  /campaign:
    get:
      summary: findAll
      operationId: findAllUsingGET
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/CampaignDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
  /campaign-type:
    get:
      summary: findAll
      operationId: findAllUsingGET_1
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/CampaignTypeDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
  "/campaign-type/{id}":
    get:
      summary: findById
      operationId: findByIdUsingGET_1
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/CampaignTypeDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
  "/campaign/{id}":
    get:
      summary: findById
      operationId: findByIdUsingGET
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/CampaignDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
  "/coupon":
    get:
      summary: findAll
      operationId: findAllUsingGET_2
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/CouponsDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
  "/coupon/{id}":
    get:
      summary: findById
      operationId: findByIdUsingGET_2
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/CouponsDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
  "/coupon/validate":
    post:
      summary: validate
      consumes:
        - application/json
      deprecated: false
      operationId: validateUsingPOST
      parameters:
        - description: couponValidationDTO
          in: body
          name: couponValidationDTO
          required: true
          schema:
            $ref: "#/definitions/CouponValidationDTO"
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ResponseEntity"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: "Not Found"
  "/coupon/by-user":
    get:
      summary: findAllByUser
      operationId: findAllByUserUsingGET
      produces:
        - application/json
      parameters:
        - name: x-mine-user-id
          in: header
          description: x-mine-user-id
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ResponseEntity"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
  "/redeem":
    get:
      summary: findAll
      operationId: findAllUsingGET_3
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/RedeemsDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
  "/redeem/{id}":
    get:
      summary: findById
      operationId: findByIdUsingGET_3
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/RedeemsDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
definitions:
  CampaignDTO:
    type: object
    properties:
      ammount:
        type: integer
        format: int32
      campaignEnd:
        type: string
        format: date-time
      campaignStart:
        type: string
        format: date-time
      campaignTypeId:
        type: integer
        format: int32
      description:
        type: string
      id:
        type: string
        format: uuid
      name:
        type: string
      state:
        type: boolean
    title: CampaignDTO
  CampaignTypeDTO:
    type: object
    properties:
      description:
        type: string
      id:
        type: integer
        format: int32
      name:
        type: string
    title: CampaignTypeDTO
  CouponsDTO:
    type: object
    properties:
      creationDate:
        type: string
        format: date-time
      id:
        type: string
        format: uuid
      idCampaign:
        type: string
        format: uuid
      name:
        type: string
      quantity:
        type: integer
        format: int32
      redeemed:
        type: integer
        format: int32
      referenceId:
        type: string
      state:
        type: boolean
      updateDate:
        type: string
        format: date-time
    title: CouponsDTO
  Link:
    type: object
    properties:
      href:
        type: string
      templated:
        type: boolean
    title: Link
  Map«string,Link»:
    type: object
    title: Map«string,Link»
    additionalProperties:
      "$ref": "#/definitions/Link"
  Map«string,string»:
    type: object
    title: Map«string,string»
    additionalProperties:
      type: string
  RedeemsDTO:
    type: object
    properties:
      confirmed:
        type: boolean
      id:
        type: string
        format: uuid
      idApiPrepaid:
        type: string
      idCoupon:
        type: string
        format: uuid
      idTrx:
        type: string
      idTrxExt:
        type: string
      idUser:
        type: string
        format: uuid
      reconciled:
        type: boolean
      reconciledDate:
        type: string
        format: date-time
      reconciledDetail:
        type: string
      redeemDate:
        type: string
        format: date-time
    title: RedeemsDTO
  CouponValidationDTO:
    properties:
      couponName:
        type: string
      userId:
        format: uuid
        type: string
      validationData:
        items:
          $ref: "#/definitions/Map«string,string»"
        type: array
    title: CouponValidationDTO
    type: object
  ResponseEntity:
    type: object
    properties:
      body:
        type: object
      statusCode:
        type: string
        enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
      statusCodeValue:
        type: integer
        format: int32
    title: ResponseEntity
