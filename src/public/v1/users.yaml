swagger: '2.0'
info:
  version: 1.0.0
  title: Users - Tenpo public API - Users
host: 40.70.68.63:8080
basePath: /v1/user-management
schemes:
  - http
paths:
  '/users/{userId}/identity-validation/attempts':
    get:
      tags:
        - user-controller
      summary: getIdentityValidationAttempts
      operationId: getIdentityValidationAttemptsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: userId
          in: path
          description: userId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/IdentityValidationAttemptsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/regions':
    get:
      tags:
        - region-controller
      summary: getRegions
      operationId: getRegionsUsingGET
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RegionEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/regions/{id}':
    get:
      tags:
        - region-controller
      summary: getRegionsByParent
      operationId: getRegionsByParentUsingGET
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RegionEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/countries':
    get:
      tags:
        - countries-controller
      summary: getCountries
      operationId: getCountriesUsingGET
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CountryEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/countries/{id}':
    get:
      tags:
        - countries-controller
      summary: getCountryById
      operationId: getCountryByIdUsingGET
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CountryEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/users/validate-tributary-identifier':
    post:
      tags:
        - user-controller
      summary: validateTributaryIdentifier
      operationId: validateTributaryIdentifierUsingPOST
      consumes:
        - application/json
      produces:
        - 'application/json'
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/DocumentRequest'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/upload-photos':
    post:
      tags:
        - upgrade-user-controller
      summary: uploadPhotos
      operationId: uploadPhotosUsingPOST
      consumes:
        - multipart/form-data
      produces:
        - '*/*'
      parameters:
        - name: photos
          in: formData
          description: photos
          required: true
          type: array
          items:
            type: string
            format: binary
          collectionFormat: multi
        - in: formData
          name: userId
          description: userId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/reset-password':
    post:
      tags:
        - user-controller
      summary: resetPassword
      operationId: resetPasswordUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/PasswordRequest'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/confirm-user':
    post:
      tags:
        - user-controller
      summary: confirmUserByEmail
      operationId: confirmUserByEmailUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/ConfirmUserRequest'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/validate-user':
    post:
      tags:
        - user-controller
      summary: validateUserByEmail
      operationId: validateUserByEmailUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/ValidateUserRequest'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/users/identity-validation/link/{link}':
    post:
      tags:
        - upgrade-user-controller
      summary: validateLink
      operationId: validateLinkUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: link
          in: path
          description: link
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ContinueLinkResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
definitions:
  DocumentRequest:
    type: object
    properties:
      tributaryIdentifier:
        type: string
    title: DocumentRequest
  IdentityValidationAttemptsResponse:
    type: object
    properties:
      identityValidationAttempts:
        type: integer
        format: int32
    title: IdentityValidationAttemptsResponse
  CountryEntity:
    type: object
    properties:
      id:
        type: integer
        format: int32
      isoCode:
        type: integer
        format: int32
      name:
        type: string
      threeCode:
        type: string
      twoCode:
        type: string
    title: CountryEntity
  UserEntity:
    type: object
    properties:
      address:
        type: string
      agreeTermsConditions:
        type: boolean
      countryCode:
        type: integer
        format: int32
      documentNumber:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
        format: uuid
      lastName:
        type: string
      level:
        type: string
        enum:
          - LEVEL_1
          - LEVEL_2
      nationality:
        type: string
      phone:
        type: string
      plan:
        type: string
        enum:
          - FREE
          - PREMIUM
      profession:
        type: string
      regionCode:
        type: integer
        format: int32
      state:
        type: string
        enum:
          - PENDING
          - VALIDATED
          - UNCONFIRMED
          - CONFIRMED
          - ACTIVE
          - BLOCKED
          - BLACKLIST
      tributaryIdentifier:
        type: string
      verificationCode:
        type: string
    title: UserEntity
  Region:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
    title: Region
  RegionEntity:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
    title: RegionEntity
  ResponseEntity:
    type: object
    properties:
      body:
        type: object
      statusCode:
        type: string
        enum:
          - '100'
          - '101'
          - '102'
          - '103'
          - '200'
          - '201'
          - '202'
          - '203'
          - '204'
          - '205'
          - '206'
          - '207'
          - '208'
          - '226'
          - '300'
          - '301'
          - '302'
          - '303'
          - '304'
          - '305'
          - '307'
          - '308'
          - '400'
          - '401'
          - '402'
          - '403'
          - '404'
          - '405'
          - '406'
          - '407'
          - '408'
          - '409'
          - '410'
          - '411'
          - '412'
          - '413'
          - '414'
          - '415'
          - '416'
          - '417'
          - '418'
          - '419'
          - '420'
          - '421'
          - '422'
          - '423'
          - '424'
          - '426'
          - '428'
          - '429'
          - '431'
          - '451'
          - '500'
          - '501'
          - '502'
          - '503'
          - '504'
          - '505'
          - '506'
          - '507'
          - '508'
          - '509'
          - '510'
          - '511'
      statusCodeValue:
        type: integer
        format: int32
    title: ResponseEntity
  PasswordRequest:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    title: PasswordRequest
  ConfirmUserRequest:
    type: object
    properties:
      code:
        type: string
      email:
        type: string
    title: ConfirmUserRequest
  ValidateUserRequest:
    type: object
    properties:
      email:
        type: string
    title: ValidateUserRequest
  ContinueLinkResponse:
    type: object
    properties:
      flow:
        type: string
        enum:
          - ONBOARDING
          - CARD_ACTIVATION
          - CARD_PROBLEM
          - CASH_IN
          - CASH_OUT
          - ACCOUNT_CONFIG
          - BLACKLIST
      payload:
        $ref: '#/definitions/Serializable'
      step:
        type: string
        enum:
          - PASSWORD
    title: ContinueLinkResponse
