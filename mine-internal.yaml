---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "Mine Internal API"
basePath: "/CI"
schemes:
- "https"
paths:
  /customer-management/notification:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/Notification"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
          headers:
            X-Requested-With:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
      x-amazon-apigateway-integration:
        uri: "http://${stageVariables.urlNotification}/v1/customer-management/notification"
        responses:
          200:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'POST,GET,PUT,PATCH,OPTIONS'"
              method.response.header.X-Requested-With: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-requested-with'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          400:
            statusCode: "400"
          401:
            statusCode: "401"
          500:
            statusCode: "500"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
  /v1/account-management/accounts/internal:
    post:
      tags:
        - account-api-controller
      summary: create
      operationId: createUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/AccountCreateRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Account'
          headers:
            X-Requested-With:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/v1/account-management/accounts/internal/{accountId}':
    put:
      tags:
        - account-api
      summary: updateAccountBalance
      operationId: updateAccountBalanceUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accountId
          in: path
          description: accountId
          required: true
          type: string
          format: uuid
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/AccountUpdateRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Account'
          headers:
            X-Requested-With:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false

definitions:
  Notification:
    type: "object"
    properties:
      userId:
        type: "string"
        format: "uuid"
        description: "User identifier"
      amount:
        type: "number"
        description: "amount of the transaction"
      notificationType:
        type: "string"
        description: "Type of the notification"
      messageType:
        type: "string"
        description: "Type of the message"
      messageBody:
        type: "string"
        description: "Body of the message"
      pusherChannel:
        type: "string"
        description: "Channel that send the message"
      pusherEvent:
        type: "string"
        description: "Event that send the message/push"
      deviceToken:
        type: "string"
        description: "deviceToken"
  ResponseStatus:
    type: "object"
    properties:
      code:
        type: "string"
        description: "The HTTP code"
      message:
        type: "string"
        description: "A description message"
  Account:
    type: object
    properties:
      balanceAmount:
        type: number
      balanceCurrency:
        type: string
      id:
        type: string
        format: uuid
      userId:
        type: string
        format: uuid
    title: Account
  AccountUpdateRequest:
    type: object
    properties:
      amount:
        type: number
      currency:
        type: string
    title: AccountUpdateRequest
  AccountCreateRequest:
    type: object
    properties:
      currency:
        type: string
      userId:
        type: string
        format: uuid
    title: AccountCreateRequest